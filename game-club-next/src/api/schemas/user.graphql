type User {
    id: ID!
    username: String!
    email: String!
    bio: String
}

type LoginResponse {
  token: String
  message: String!
  user: User!
}

type UserResponse {
  message: String!
  user: User!
}

input Credentials {
  username: String!
  password: String!
}

input UserInput {
  username: String!
  email: String!
  password: String!
}

input UserModify {
  username: String
  email: String
  password: String
}

type Query {
    users: [User]
    userById(id: ID!): User
    checkToken: UserResponse
}

type Mutation {
    login(credentials: Credentials!): LoginResponse
    register(user: UserInput!): UserResponse
    updateUser(user: UserModify!): UserResponse
    deleteUser: UserResponse
    updateUserAsAdmin(user: UserModify!, id: ID!): UserResponse
    deleteUserAsAdmin(id: ID!): UserResponse
}